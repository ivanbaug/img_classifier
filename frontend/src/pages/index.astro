---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
const title = "Image Classifier - Sessions";
---

<Layout title={title}>
	<Navbar title={title} />
	<main>
		<div class="container mx-auto">
			<div class="flex flex-col items-center m-8">
				<div class="text-slate-200 text-3xl font-light mt-4">
					Pick a session or create a new one
				</div>
				<div class="flex flex-col items-center h-auto w-fit">
					<div id="btnContainer" class="py-8 flex flex-col gap-3 h-auto w-full">
					</div>
					<div class="pt-4 pb-3 flex flex-col gap-3 h-auto w-fit">
						<button id="refreshImgBtn" class="bg-lime-700 hover:bg-lime-900 text-zinc-50 hover:text-zinc-200 font-normal py-4 px-4 w-full rounded flex justify-right">
							<span class="flex justify-between items-center gap-4 w-full">
								<span>Check for folder changes</span>
							</span>
						</button>
					</div>
				</div>
			</div>
		</div>

		<script >
			interface Session {
				session_id: number;
				img_labeled: number;
				img_total: number;
			}
			interface ResponseData {
				success: boolean;
				data?: Session[];
				info?: string;
			}
			
			const API_URL = import.meta.env.PUBLIC_API_URL;

			let firstLoad = true;
			const btnContainer = document.getElementById("btnContainer");
			const refreshImgBtn = document.getElementById("refreshImgBtn");

			refreshImgBtn?.addEventListener("click", async function () {
				void await refreshInitialImageData();
				void await getAvailableSessions();
			});



			async function getAvailableSessions() {
				try {
					const response = await fetch(
						API_URL + "/get_available_sessions",
						{
							method: "GET",
						},
					);

					const res: ResponseData = await response.json();
					// console.log(res);

					if (res.success === false) {
						alert(res.info);
						return;
					}

					if (btnContainer) {
						btnContainer.innerHTML = "";
					}

					res.data?.forEach((session) => {
						const btn = createCustomButton(session);
						if (btnContainer && btn) {
							btnContainer.appendChild(btn);
						}
					});
				} catch (error) {
					console.error("Error fetching image:", error);
				}
			}

			async function refreshInitialImageData() {
				try {
					const response = await fetch(
						API_URL + "/refresh_image_init_data",
						{
							method: "GET",
						},
					);

					const res: ResponseData = await response.json();

					if (res.success === false) {
						alert(res.info);
						return;
					}
				} catch (error) {
					console.error("Error refreshing init data:", error);
				}
			}

			function createCustomButton(session: Session) {
				const btn = document.createElement("button");
				const spanParent = document.createElement("span");
				spanParent.classList.add("flex", "justify-between", "items-center", "gap-4", "w-full");
				const spanChild1 = document.createElement("span");
				spanChild1.textContent = `Session ${session.session_id.toString()}`;
				const spanChild2 = document.createElement("span");
				spanChild2.textContent = `${session.img_labeled}/${session.img_total}`;
				spanParent.appendChild(spanChild1);
				spanParent.appendChild(spanChild2);
				btn.appendChild(spanParent);
				btn.addEventListener("click", function () {
					document.location.href = `classify?session=${session.session_id.toString()}`;
				});
				btn.classList.add(
					"bg-sky-700",
					"hover:bg-sky-900",
					"text-slate-100",
					"hover:text-slate-300",
					"font-normal",
					"py-4",
					"px-4",
					"w-full",
					"rounded",
					"flex",
					"justify-right",
				);
				return btn;
			}

			if (firstLoad) {
				getAvailableSessions();
				firstLoad = false;
			}
		</script>
	</main>
</Layout>
